{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userConstants } from '../constants';\nimport { alertActions } from './';\nimport fire from \"../firebase\";\nexport var userActions = {\n  login: login,\n  logout: logout //register,\n  //delete: _delete\n\n};\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(email, password) {\n    var temp, tempError, request, success, failure;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            failure = function _ref3(error) {\n              return {\n                type: userConstants.LOGIN_FAILURE,\n                error: error\n              };\n            };\n\n            success = function _ref2(user) {\n              return {\n                type: userConstants.LOGIN_SUCCESS,\n                user: user\n              };\n            };\n\n            request = function _ref(user) {\n              return {\n                type: userConstants.LOGIN_REQUEST,\n                user: user\n              };\n            };\n\n            temp = null;\n            tempError = null;\n            _context.next = 7;\n            return fire.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n              if (user) {\n                fire.database().ref('/users/' + user.user.uid).once('value').then(function (snapshot) {\n                  user.user[\"name\"] = snapshot.val().name;\n                  user.user[\"headshot\"] = snapshot.val().headshot;\n                  user.user[\"phone\"] = snapshot.val().phone;\n                  user.user[\"org\"] = snapshot.val().org;\n                  localStorage.setItem('user', JSON.stringify(user));\n                  temp = user;\n                }, function (error) {\n                  localStorage.setItem('user', null);\n                  tempError = error.toString();\n                });\n              }\n            }, function (error) {\n              localStorage.setItem('user', null);\n              tempError = error.toString();\n            });\n\n          case 7:\n            return _context.abrupt(\"return\", function (dispatch) {\n              if (temp) {\n                dispatch(success(user));\n                dispatch(request({\n                  email: email\n                }));\n              } else {\n                dispatch(failure(tempError));\n                dispatch(alertActions.error(tempError));\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction logout(firebase) {\n  fire.auth().signOut();\n  return {\n    type: userConstants.LOGOUT\n  };\n} //function register(user) {\n//    return dispatch => {\n//        dispatch(request(user));\n//        userService.register(user)\n//            .then(\n//                user => { \n//                    dispatch(success());\n//                    history.push('/login');\n//                    dispatch(alertActions.success('Registration successful'));\n//                },\n//                error => {\n//                    dispatch(failure(error.toString()));\n//                    dispatch(alertActions.error(error.toString()));\n//                }\n//            );\n//    };\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n//}\n//function getAll() {\n//    return dispatch => {\n//        dispatch(request());\n//        userService.getAll()\n//            .then(\n//                users => dispatch(success(users)),\n//                error => dispatch(failure(error.toString()))\n//            );\n//    };\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n//}\n//// prefixed function name with underscore because delete is a reserved word in javascript\n//function _delete(id) {\n//    return dispatch => {\n//        dispatch(request(id));\n//        userService.delete(id)\n//            .then(\n//                user => dispatch(success(id)),\n//                error => dispatch(failure(id, error.toString()))\n//            );\n//    };\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n//}","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/actions/user.actions.js"],"names":["userConstants","alertActions","fire","userActions","login","logout","email","password","request","success","failure","error","type","LOGIN_FAILURE","user","LOGIN_SUCCESS","LOGIN_REQUEST","temp","tempError","auth","signInWithEmailAndPassword","then","database","ref","uid","once","snapshot","val","name","headshot","phone","org","localStorage","setItem","JSON","stringify","toString","dispatch","firebase","signOut","LOGOUT"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\r\nimport { alertActions } from './';\r\nimport fire from \"../firebase\";\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    //register,\r\n    //delete: _delete\r\n};\r\n\r\nasync function login(email, password) {\n  var temp = null;\n  var tempError = null;\r\n    await fire.auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(user => {\r\n        if (user) {\n          fire.database().ref('/users/' + user.user.uid).once('value').then(function (snapshot) {\r\n            user.user[\"name\"] = snapshot.val().name;\r\n            user.user[\"headshot\"] = snapshot.val().headshot;\r\n            user.user[\"phone\"] = snapshot.val().phone;\r\n            user.user[\"org\"] = snapshot.val().org;\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            temp = user;\r\n          },\r\n            error => {\r\n              localStorage.setItem('user', null);\n              tempError = error.toString();\r\n            });\n        }\r\n      },\r\n      error => {\r\n        localStorage.setItem('user', null);\n        tempError = error.toString();\r\n      });\n\r\n  return dispatch => {\n    if (temp) {\r\n      dispatch(success(user));\r\n      dispatch(request({ email }));\r\n    }\n    else {\r\n      dispatch(failure(tempError));\r\n      dispatch(alertActions.error(tempError));\r\n    }\r\n  };\r\n\r\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout(firebase) {\r\n    fire.auth().signOut();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\n//function register(user) {\r\n//    return dispatch => {\r\n//        dispatch(request(user));\r\n\r\n//        userService.register(user)\r\n//            .then(\r\n//                user => { \r\n//                    dispatch(success());\r\n//                    history.push('/login');\r\n//                    dispatch(alertActions.success('Registration successful'));\r\n//                },\r\n//                error => {\r\n//                    dispatch(failure(error.toString()));\r\n//                    dispatch(alertActions.error(error.toString()));\r\n//                }\r\n//            );\r\n//    };\r\n\r\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n//}\r\n\r\n//function getAll() {\r\n//    return dispatch => {\r\n//        dispatch(request());\r\n\r\n//        userService.getAll()\r\n//            .then(\r\n//                users => dispatch(success(users)),\r\n//                error => dispatch(failure(error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n//}\r\n\r\n//// prefixed function name with underscore because delete is a reserved word in javascript\r\n//function _delete(id) {\r\n//    return dispatch => {\r\n//        dispatch(request(id));\r\n\r\n//        userService.delete(id)\r\n//            .then(\r\n//                user => dispatch(success(id)),\r\n//                error => dispatch(failure(id, error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n//}\r\n"]},"metadata":{},"sourceType":"module"}