{"ast":null,"code":"import { userConstants } from '../constants';\nimport { alertActions } from './';\nimport { history } from '../helpers';\nimport fire from \"../firebase\";\nexport var userActions = {\n  login: login,\n  logout: logout //register,\n  //delete: _delete\n\n};\n\nfunction login(email, password) {\n  return function (dispatch) {\n    fire.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      dispatch(success(user));\n      history.push('/home');\n    }, function (error) {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n    dispatch(request({\n      email: email\n    }));\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction logout(firebase) {\n  fire.auth.signOut();\n  return {\n    type: userConstants.LOGOUT\n  };\n} //function register(user) {\n//    return dispatch => {\n//        dispatch(request(user));\n//        userService.register(user)\n//            .then(\n//                user => { \n//                    dispatch(success());\n//                    history.push('/login');\n//                    dispatch(alertActions.success('Registration successful'));\n//                },\n//                error => {\n//                    dispatch(failure(error.toString()));\n//                    dispatch(alertActions.error(error.toString()));\n//                }\n//            );\n//    };\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n//}\n//function getAll() {\n//    return dispatch => {\n//        dispatch(request());\n//        userService.getAll()\n//            .then(\n//                users => dispatch(success(users)),\n//                error => dispatch(failure(error.toString()))\n//            );\n//    };\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n//}\n//// prefixed function name with underscore because delete is a reserved word in javascript\n//function _delete(id) {\n//    return dispatch => {\n//        dispatch(request(id));\n//        userService.delete(id)\n//            .then(\n//                user => dispatch(success(id)),\n//                error => dispatch(failure(id, error.toString()))\n//            );\n//    };\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n//}","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/actions/user.actions.js"],"names":["userConstants","alertActions","history","fire","userActions","login","logout","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","success","push","error","failure","toString","request","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","firebase","signOut","LOGOUT"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB,CAGvB;AACA;;AAJuB,CAApB;;AAOP,SAASD,KAAT,CAAeE,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAO,UAAAC,QAAQ,EAAI;AACjBN,IAAAA,IAAI,CAACO,IAAL,GACGC,0BADH,CAC8BJ,KAD9B,EACqCC,QADrC,EAEGI,IAFH,CAEQ,UAAAC,IAAI,EAAI;AACZJ,MAAAA,QAAQ,CAACK,OAAO,CAACD,IAAD,CAAR,CAAR;AACAX,MAAAA,OAAO,CAACa,IAAR,CAAa,OAAb;AACD,KALH,EAMI,UAAAC,KAAK,EAAI;AACPP,MAAAA,QAAQ,CAACQ,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAT,MAAAA,QAAQ,CAACR,YAAY,CAACe,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACD,KATL;AAUAT,IAAAA,QAAQ,CAACU,OAAO,CAAC;AAAEZ,MAAAA,KAAK,EAALA;AAAF,KAAD,CAAR,CAAR;AACD,GAZD;;AAcA,WAASY,OAAT,CAAiBN,IAAjB,EAAuB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEpB,aAAa,CAACqB,aAAtB;AAAqCR,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEO,MAAAA,IAAI,EAAEpB,aAAa,CAACsB,aAAtB;AAAqCT,MAAAA,IAAI,EAAJA;AAArC,KAAP;AAAoD;;AAC7E,WAASI,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEpB,aAAa,CAACuB,aAAtB;AAAqCP,MAAAA,KAAK,EAALA;AAArC,KAAP;AAAqD;AAChF;;AAED,SAASV,MAAT,CAAgBkB,QAAhB,EAA0B;AACtBrB,EAAAA,IAAI,CAACO,IAAL,CAAUe,OAAV;AACA,SAAO;AAAEL,IAAAA,IAAI,EAAEpB,aAAa,CAAC0B;AAAtB,GAAP;AACH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { userConstants } from '../constants';\r\nimport { alertActions } from './';\r\nimport { history } from '../helpers';\r\nimport fire from \"../firebase\";\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    //register,\r\n    //delete: _delete\r\n};\r\n\r\nfunction login(email, password) {\r\n  return dispatch => {\r\n    fire.auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(user => {\n        dispatch(success(user));\n        history.push('/home');\n      },\n        error => {\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        });\r\n    dispatch(request({ email }));\r\n  };\r\n\r\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout(firebase) {\r\n    fire.auth.signOut();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\n//function register(user) {\r\n//    return dispatch => {\r\n//        dispatch(request(user));\r\n\r\n//        userService.register(user)\r\n//            .then(\r\n//                user => { \r\n//                    dispatch(success());\r\n//                    history.push('/login');\r\n//                    dispatch(alertActions.success('Registration successful'));\r\n//                },\r\n//                error => {\r\n//                    dispatch(failure(error.toString()));\r\n//                    dispatch(alertActions.error(error.toString()));\r\n//                }\r\n//            );\r\n//    };\r\n\r\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n//}\r\n\r\n//function getAll() {\r\n//    return dispatch => {\r\n//        dispatch(request());\r\n\r\n//        userService.getAll()\r\n//            .then(\r\n//                users => dispatch(success(users)),\r\n//                error => dispatch(failure(error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n//}\r\n\r\n//// prefixed function name with underscore because delete is a reserved word in javascript\r\n//function _delete(id) {\r\n//    return dispatch => {\r\n//        dispatch(request(id));\r\n\r\n//        userService.delete(id)\r\n//            .then(\r\n//                user => dispatch(success(id)),\r\n//                error => dispatch(failure(id, error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n//}\n"]},"metadata":{},"sourceType":"module"}