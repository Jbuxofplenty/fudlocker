{"ast":null,"code":"import { userConstants } from '../constants';\nimport { alertActions } from './';\nimport fire from \"../firebase\";\nexport var userActions = {\n  login: login,\n  logout: logout //register,\n  //delete: _delete\n\n};\n\nfunction login(email, password, history) {\n  return function (dispatch) {\n    fire.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      var tempUser = {};\n\n      if (user) {\n        fire.database().ref('/users/' + user.user.uid).once('value').then(function (snapshot) {\n          tempUser[\"name\"] = snapshot.val().name;\n          tempUser[\"headshot\"] = snapshot.val().headshot;\n          tempUser[\"phone\"] = snapshot.val().phone;\n          tempUser[\"org\"] = snapshot.val().org;\n          localStorage.setItem('user', JSON.stringify(tempUser));\n          console.log(tempUser);\n          dispatch(success(user, tempUser));\n          history.push('/');\n        }, function (error) {\n          localStorage.setItem('user', null);\n          dispatch(failure(error.toString()));\n          dispatch(alertActions.error(error.toString()));\n        });\n        dispatch(request({\n          email: email\n        }));\n      }\n    }, function (error) {\n      localStorage.setItem('user', null);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n    var user = JSON.parse(localStorage.getItem('user'));\n    console.log(user);\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction logout(firebase) {\n  fire.auth().signOut();\n  return {\n    type: userConstants.LOGOUT\n  };\n} //function register(user) {\n//    return dispatch => {\n//        dispatch(request(user));\n//        userService.register(user)\n//            .then(\n//                user => { \n//                    dispatch(success());\n//                    history.push('/login');\n//                    dispatch(alertActions.success('Registration successful'));\n//                },\n//                error => {\n//                    dispatch(failure(error.toString()));\n//                    dispatch(alertActions.error(error.toString()));\n//                }\n//            );\n//    };\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n//}\n//function getAll() {\n//    return dispatch => {\n//        dispatch(request());\n//        userService.getAll()\n//            .then(\n//                users => dispatch(success(users)),\n//                error => dispatch(failure(error.toString()))\n//            );\n//    };\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n//}\n//// prefixed function name with underscore because delete is a reserved word in javascript\n//function _delete(id) {\n//    return dispatch => {\n//        dispatch(request(id));\n//        userService.delete(id)\n//            .then(\n//                user => dispatch(success(id)),\n//                error => dispatch(failure(id, error.toString()))\n//            );\n//    };\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n//}","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/actions/user.actions.js"],"names":["userConstants","alertActions","fire","userActions","login","logout","email","password","history","dispatch","auth","signInWithEmailAndPassword","then","user","tempUser","database","ref","uid","once","snapshot","val","name","headshot","phone","org","localStorage","setItem","JSON","stringify","console","log","success","push","error","failure","toString","request","parse","getItem","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","firebase","signOut","LOGOUT"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\r\nimport { alertActions } from './';\r\nimport fire from \"../firebase\";\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    //register,\r\n    //delete: _delete\r\n};\r\n\r\nfunction login(email, password, history) {\r\n  return dispatch => {\r\n    fire.auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(user => {\n        var tempUser = {};\n        if (user) {\n          fire.database().ref('/users/' + user.user.uid).once('value').then(function (snapshot) {\r\n            tempUser[\"name\"] = snapshot.val().name;\r\n            tempUser[\"headshot\"] = snapshot.val().headshot;\r\n            tempUser[\"phone\"] = snapshot.val().phone;\r\n            tempUser[\"org\"] = snapshot.val().org;\r\n            localStorage.setItem('user', JSON.stringify(tempUser));\n            console.log(tempUser);\r\n            dispatch(success(user, tempUser));\n            history.push('/');\r\n          },\r\n            error => {\r\n              localStorage.setItem('user', null);\r\n              dispatch(failure(error.toString()));\r\n              dispatch(alertActions.error(error.toString()));\r\n            });\r\n          dispatch(request({ email }));\r\n        }\r\n      },\r\n      error => {\r\n          localStorage.setItem('user', null);\r\n          dispatch(failure(error.toString()));\r\n          dispatch(alertActions.error(error.toString()));\r\n        });\n    \n\n    var user = JSON.parse(localStorage.getItem('user'));\n    console.log(user);\r\n  };\r\n\r\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout(firebase) {\r\n    fire.auth().signOut();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\n//function register(user) {\r\n//    return dispatch => {\r\n//        dispatch(request(user));\r\n\r\n//        userService.register(user)\r\n//            .then(\r\n//                user => { \r\n//                    dispatch(success());\r\n//                    history.push('/login');\r\n//                    dispatch(alertActions.success('Registration successful'));\r\n//                },\r\n//                error => {\r\n//                    dispatch(failure(error.toString()));\r\n//                    dispatch(alertActions.error(error.toString()));\r\n//                }\r\n//            );\r\n//    };\r\n\r\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n//}\r\n\r\n//function getAll() {\r\n//    return dispatch => {\r\n//        dispatch(request());\r\n\r\n//        userService.getAll()\r\n//            .then(\r\n//                users => dispatch(success(users)),\r\n//                error => dispatch(failure(error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n//}\r\n\r\n//// prefixed function name with underscore because delete is a reserved word in javascript\r\n//function _delete(id) {\r\n//    return dispatch => {\r\n//        dispatch(request(id));\r\n\r\n//        userService.delete(id)\r\n//            .then(\r\n//                user => dispatch(success(id)),\r\n//                error => dispatch(failure(id, error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n//}\r\n"]},"metadata":{},"sourceType":"module"}