{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { userConstants } from '../constants';\nimport { alertActions } from './';\nimport fire from \"../firebase\";\nexport var dataActions = {\n  populateDashboard: populateDashboard\n};\n\nfunction populateDashboard() {\n  return _populateDashboard.apply(this, arguments);\n}\n\nfunction _populateDashboard() {\n  _populateDashboard = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var userId, org, locations, mealsForSale, pickedUp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //Get the current userID\n            userId = firebase.auth().currentUser.uid;\n            org = fb.auth().currentUser.token;\n            _context.next = 4;\n            return fb.database().ref('/lockers/data').once('value', function (snapshot) {\n              var tempArray = {};\n              snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                tempArray[childSnapshot.key] = childData;\n              });\n              locations = tempArray;\n            }.bind(this));\n\n          case 4:\n            console.log(locations);\n            _context.next = 7;\n            return fb.database().ref('/meals/forSale').once('value', function (snapshot) {\n              var tempArray = {};\n              snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                tempArray[childSnapshot.key] = childData;\n              });\n              mealsForSale = tempArray;\n            }.bind(this));\n\n          case 7:\n            console.log(mealsForSale);\n            _context.next = 10;\n            return fb.database().ref('/restaurants/' + org + '/inventory/pickedUp').once('value', function (snapshot) {\n              var tempArray = {};\n              snapshot.forEach(function (childSnapshot) {\n                var childData = childSnapshot.val();\n                tempArray[childSnapshot.key] = childData;\n              });\n              pickedUp = tempArray;\n            }.bind(this));\n\n          case 10:\n            console.log(pickedUp);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _populateDashboard.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/actions/data.actions.js"],"names":["userConstants","alertActions","fire","dataActions","populateDashboard","userId","firebase","auth","currentUser","uid","org","fb","token","database","ref","once","snapshot","tempArray","forEach","childSnapshot","childData","val","key","locations","bind","console","log","mealsForSale","pickedUp"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,IAA7B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,iBAAiB,EAAjBA;AADyB,CAApB;;SAIQA,iB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACIC,YAAAA,MAFR,GAEiBC,QAAQ,CAACC,IAAT,GAAgBC,WAAhB,CAA4BC,GAF7C;AAGQC,YAAAA,GAHR,GAGcC,EAAE,CAACJ,IAAH,GAAUC,WAAV,CAAsBI,KAHpC;AAAA;AAAA,mBAMUD,EAAE,CAACE,QAAH,GAAcC,GAAd,CAAkB,eAAlB,EAAmCC,IAAnC,CAAwC,OAAxC,EAAiD,UAAUC,QAAV,EAAoB;AACzE,kBAAIC,SAAS,GAAG,EAAhB;AACAD,cAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACxC,oBAAIC,SAAS,GAAGD,aAAa,CAACE,GAAd,EAAhB;AACAJ,gBAAAA,SAAS,CAACE,aAAa,CAACG,GAAf,CAAT,GAA+BF,SAA/B;AACD,eAHD;AAIAG,cAAAA,SAAS,GAAGN,SAAZ;AACD,aAPsD,CAOrDO,IAPqD,CAOhD,IAPgD,CAAjD,CANV;;AAAA;AAcIC,YAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAdJ;AAAA,mBAiBUZ,EAAE,CAACE,QAAH,GAAcC,GAAd,CAAkB,gBAAlB,EAAoCC,IAApC,CAAyC,OAAzC,EAAkD,UAAUC,QAAV,EAAoB;AAC1E,kBAAIC,SAAS,GAAG,EAAhB;AACAD,cAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACxC,oBAAIC,SAAS,GAAGD,aAAa,CAACE,GAAd,EAAhB;AACAJ,gBAAAA,SAAS,CAACE,aAAa,CAACG,GAAf,CAAT,GAA+BF,SAA/B;AACD,eAHD;AAIAO,cAAAA,YAAY,GAAGV,SAAf;AACD,aAPuD,CAOtDO,IAPsD,CAOjD,IAPiD,CAAlD,CAjBV;;AAAA;AAyBIC,YAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAzBJ;AAAA,mBA4BUhB,EAAE,CAACE,QAAH,GAAcC,GAAd,CAAkB,kBAAkBJ,GAAlB,GAAwB,qBAA1C,EAAiEK,IAAjE,CAAsE,OAAtE,EAA+E,UAAUC,QAAV,EAAoB;AACvG,kBAAIC,SAAS,GAAG,EAAhB;AACAD,cAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAUC,aAAV,EAAyB;AACxC,oBAAIC,SAAS,GAAGD,aAAa,CAACE,GAAd,EAAhB;AACAJ,gBAAAA,SAAS,CAACE,aAAa,CAACG,GAAf,CAAT,GAA+BF,SAA/B;AACD,eAHD;AAIAQ,cAAAA,QAAQ,GAAGX,SAAX;AACD,aAPoF,CAOnFO,IAPmF,CAO9E,IAP8E,CAA/E,CA5BV;;AAAA;AAoCIC,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsCG","sourcesContent":["import { userConstants } from '../constants';\r\nimport { alertActions } from './';\r\nimport fire from \"../firebase\";\n\nexport const dataActions = {\r\n  populateDashboard,\r\n};\n\nasync function populateDashboard() {\r\n    //Get the current userID\r\n    var userId = firebase.auth().currentUser.uid;\r\n    var org = fb.auth().currentUser.token;\r\n\r\n    var locations;\r\n    await fb.database().ref('/lockers/data').once('value', function (snapshot) {\r\n      let tempArray = {};\r\n      snapshot.forEach(function (childSnapshot) {\r\n        var childData = childSnapshot.val();\r\n        tempArray[childSnapshot.key] = childData;\r\n      });\r\n      locations = tempArray;\r\n    }.bind(this));\r\n    console.log(locations);\r\n\r\n    var mealsForSale;\r\n    await fb.database().ref('/meals/forSale').once('value', function (snapshot) {\r\n      let tempArray = {};\r\n      snapshot.forEach(function (childSnapshot) {\r\n        var childData = childSnapshot.val();\r\n        tempArray[childSnapshot.key] = childData;\r\n      });\r\n      mealsForSale = tempArray;\r\n    }.bind(this));\r\n    console.log(mealsForSale);\r\n\r\n    var pickedUp;\r\n    await fb.database().ref('/restaurants/' + org + '/inventory/pickedUp').once('value', function (snapshot) {\r\n      let tempArray = {};\r\n      snapshot.forEach(function (childSnapshot) {\r\n        var childData = childSnapshot.val();\r\n        tempArray[childSnapshot.key] = childData;\r\n      });\r\n      pickedUp = tempArray;\r\n    }.bind(this));\r\n    console.log(pickedUp);\r\n\r\n  };\n"]},"metadata":{},"sourceType":"module"}