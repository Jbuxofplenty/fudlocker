{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/views/Stats/Stats.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar StatisticsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatisticsPage, _Component);\n\n  function StatisticsPage(props) {\n    var _this;\n\n    _classCallCheck(this, StatisticsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatisticsPage).call(this, props));\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      radioSelected: 2\n    };\n    return _this;\n  }\n\n  _createClass(StatisticsPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props, dispatch, user, userData, ctx, randomScalingFactor, lineChartData, myLineChart;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, dispatch = _this$props.dispatch, user = _this$props.user, userData = _this$props.userData;\n                ctx = document.getElementById(\"stats_container\").getContext(\"2d\");\n                window.myLine = new Chart(ctx).Line(lineChartData, {\n                  responsive: true\n                });\n\n                randomScalingFactor = function randomScalingFactor() {\n                  return Math.round(Math.random() * 100);\n                };\n\n                lineChartData = {\n                  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n                  datasets: [{\n                    label: \"My First dataset\",\n                    fillColor: \"rgba(220,220,220,0.2)\",\n                    strokeColor: \"rgba(220,220,220,1)\",\n                    pointColor: \"rgba(220,220,220,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(220,220,220,1)\",\n                    data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\n                  }, {\n                    label: \"My Second dataset\",\n                    fillColor: \"rgba(151,187,205,0.2)\",\n                    strokeColor: \"rgba(151,187,205,1)\",\n                    pointColor: \"rgba(151,187,205,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(151,187,205,1)\",\n                    data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\n                  }]\n                };\n                myLineChart = new Chart(ctx).Line(lineChartData, options);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"header-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Statistics\"), React.createElement(\"div\", {\n        id: \"stats_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StatisticsPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var authentication = state.authentication,\n      data = state.data;\n  var user = authentication.user,\n      userData = authentication.userData;\n  var restaurantData = data.restaurantData;\n  return {\n    user: user,\n    userData: userData,\n    restaurantData: restaurantData\n  };\n}\n\nvar Stats = connect(mapStateToProps)(StatisticsPage);\nexport default Stats;","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/views/Stats/Stats.js"],"names":["React","Component","connect","StatisticsPage","props","loading","state","dropdownOpen","radioSelected","dispatch","user","userData","ctx","document","getElementById","getContext","window","myLine","Chart","Line","lineChartData","responsive","randomScalingFactor","Math","round","random","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","data","myLineChart","options","mapStateToProps","authentication","restaurantData","Stats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass StatisticsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { dispatch, user, userData } = this.props;\n    var ctx = document.getElementById(\"stats_container\").getContext(\"2d\");\r\n    window.myLine = new Chart(ctx).Line(lineChartData, {\r\n      responsive: true\r\n    });\n    var randomScalingFactor = function () { return Math.round(Math.random() * 100) };\r\n    var lineChartData = {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fillColor: \"rgba(220,220,220,0.2)\",\r\n          strokeColor: \"rgba(220,220,220,1)\",\r\n          pointColor: \"rgba(220,220,220,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n          data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n        },\r\n        {\r\n          label: \"My Second dataset\",\r\n          fillColor: \"rgba(151,187,205,0.2)\",\r\n          strokeColor: \"rgba(151,187,205,1)\",\r\n          pointColor: \"rgba(151,187,205,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(151,187,205,1)\",\r\n          data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n        }\r\n      ]\r\n    }\r\n    var myLineChart = new Chart(ctx).Line(lineChartData, options);\r\n  }\r\n\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h6 className=\"header-text\">Statistics</h6>\r\n        <div id=\"stats_container\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { authentication, data } = state;\r\n  const { user, userData } = authentication;\r\n  const { restaurantData } = data;\r\n  return {\r\n    user,\r\n    userData,\r\n    restaurantData\r\n  };\r\n}\r\n\r\nconst Stats = connect(mapStateToProps)(StatisticsPage);\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}