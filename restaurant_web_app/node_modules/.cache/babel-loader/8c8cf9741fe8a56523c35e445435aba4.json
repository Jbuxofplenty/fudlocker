{"ast":null,"code":"import { userConstants } from '../constants';\nimport { alertActions } from './';\nimport fire from \"../firebase\";\nexport var userActions = {\n  login: login,\n  logout: logout //register,\n  //delete: _delete\n\n};\n\nfunction login(email, password) {\n  return function (dispatch) {\n    fire.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch(success(user));\n    }, function (error) {\n      localStorage.setItem('user', null);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n    var user = localStorage.getItem('user');\n    console.log(user[\"user\"]);\n    fire.database().ref('/users/' + user['uid']).once('value').then(function (snapshot) {\n      console.log(snapshot.val());\n      user[\"name\"] = snapshot.val().name;\n      user[\"headshot\"] = snapshot.val().headshot;\n      user[\"email\"] = snapshot.val().email;\n      user[\"phone\"] = snapshot.val().phone;\n      user[\"org\"] = snapshot.val().org;\n      localStorage.setItem('user', JSON.stringify(user));\n      return user;\n    }, function (error) {\n      localStorage.setItem('user', null);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n    dispatch(request({\n      email: email\n    }));\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction logout(firebase) {\n  fire.auth().signOut();\n  return {\n    type: userConstants.LOGOUT\n  };\n} //function register(user) {\n//    return dispatch => {\n//        dispatch(request(user));\n//        userService.register(user)\n//            .then(\n//                user => { \n//                    dispatch(success());\n//                    history.push('/login');\n//                    dispatch(alertActions.success('Registration successful'));\n//                },\n//                error => {\n//                    dispatch(failure(error.toString()));\n//                    dispatch(alertActions.error(error.toString()));\n//                }\n//            );\n//    };\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n//}\n//function getAll() {\n//    return dispatch => {\n//        dispatch(request());\n//        userService.getAll()\n//            .then(\n//                users => dispatch(success(users)),\n//                error => dispatch(failure(error.toString()))\n//            );\n//    };\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n//}\n//// prefixed function name with underscore because delete is a reserved word in javascript\n//function _delete(id) {\n//    return dispatch => {\n//        dispatch(request(id));\n//        userService.delete(id)\n//            .then(\n//                user => dispatch(success(id)),\n//                error => dispatch(failure(id, error.toString()))\n//            );\n//    };\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n//}","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/actions/user.actions.js"],"names":["userConstants","alertActions","fire","userActions","login","logout","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","localStorage","setItem","JSON","stringify","success","error","failure","toString","getItem","console","log","database","ref","once","snapshot","val","name","headshot","phone","org","request","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","firebase","signOut","LOGOUT"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\r\nimport { alertActions } from './';\r\nimport fire from \"../firebase\";\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    //register,\r\n    //delete: _delete\r\n};\r\n\r\nfunction login(email, password) {\r\n  return dispatch => {\r\n    fire.auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(user => {\r\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        dispatch(success(user));\r\n      },\r\n      error => {\r\n          localStorage.setItem('user', null);\r\n          dispatch(failure(error.toString()));\r\n          dispatch(alertActions.error(error.toString()));\r\n        });\n    var user = localStorage.getItem('user');\n    console.log(user[\"user\"]);\n    fire.database().ref('/users/' + user['uid']).once('value').then(function (snapshot) {\n      console.log(snapshot.val());\r\n        user[\"name\"] = snapshot.val().name;\r\n        user[\"headshot\"] = snapshot.val().headshot;\r\n        user[\"email\"] = snapshot.val().email;\r\n        user[\"phone\"] = snapshot.val().phone;\r\n        user[\"org\"] = snapshot.val().org;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        return user;\r\n      },\r\n        error => {\r\n          localStorage.setItem('user', null);\r\n          dispatch(failure(error.toString()));\r\n          dispatch(alertActions.error(error.toString()));\r\n        });\r\n    dispatch(request({ email }));\r\n  };\r\n\r\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout(firebase) {\r\n    fire.auth().signOut();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\n//function register(user) {\r\n//    return dispatch => {\r\n//        dispatch(request(user));\r\n\r\n//        userService.register(user)\r\n//            .then(\r\n//                user => { \r\n//                    dispatch(success());\r\n//                    history.push('/login');\r\n//                    dispatch(alertActions.success('Registration successful'));\r\n//                },\r\n//                error => {\r\n//                    dispatch(failure(error.toString()));\r\n//                    dispatch(alertActions.error(error.toString()));\r\n//                }\r\n//            );\r\n//    };\r\n\r\n//    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n//    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n//    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n//}\r\n\r\n//function getAll() {\r\n//    return dispatch => {\r\n//        dispatch(request());\r\n\r\n//        userService.getAll()\r\n//            .then(\r\n//                users => dispatch(success(users)),\r\n//                error => dispatch(failure(error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n//    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n//    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n//}\r\n\r\n//// prefixed function name with underscore because delete is a reserved word in javascript\r\n//function _delete(id) {\r\n//    return dispatch => {\r\n//        dispatch(request(id));\r\n\r\n//        userService.delete(id)\r\n//            .then(\r\n//                user => dispatch(success(id)),\r\n//                error => dispatch(failure(id, error.toString()))\r\n//            );\r\n//    };\r\n\r\n//    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n//    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n//    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n//}\r\n"]},"metadata":{},"sourceType":"module"}