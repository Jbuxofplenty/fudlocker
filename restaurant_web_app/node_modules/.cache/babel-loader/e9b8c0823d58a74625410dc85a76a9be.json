{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/views/Stats/Stats.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Chart from 'chart.js';\nimport { dataActions } from '../../actions';\n\nvar StatisticsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatisticsPage, _Component);\n\n  function StatisticsPage(props) {\n    var _this;\n\n    _classCallCheck(this, StatisticsPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatisticsPage).call(this, props));\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        className: \"animated fadeIn pt-1 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    _this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n      locationsData: null,\n      purchased: null,\n      completed: null\n    };\n    return _this;\n  }\n\n  _createClass(StatisticsPage, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var dispatch, locationsData, purchased, completed, randomScalingFactor, lineChartData, ctx, myLineChart;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch = this.props.dispatch;\n                _context.next = 3;\n                return dispatch(dataActions.populateStatistics());\n\n              case 3:\n                locationsData = JSON.parse(localStorage.getItem('locations'));\n                purchased = JSON.parse(localStorage.getItem('purchased'));\n                completed = JSON.parse(localStorage.getItem('completed'));\n                this.setState({\n                  locationsData: locationsData,\n                  purchased: purchased,\n                  completed: completed\n                });\n                this.processData();\n\n                randomScalingFactor = function randomScalingFactor() {\n                  return Math.round(Math.random() * 100);\n                };\n\n                lineChartData = {\n                  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n                  datasets: [{\n                    label: \"My First dataset\",\n                    fillColor: \"rgba(220,220,220,0.2)\",\n                    strokeColor: \"rgba(220,220,220,1)\",\n                    pointColor: \"rgba(220,220,220,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(220,220,220,1)\",\n                    data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\n                  }, {\n                    label: \"My Second dataset\",\n                    fillColor: \"rgba(151,187,205,0.2)\",\n                    strokeColor: \"rgba(151,187,205,1)\",\n                    pointColor: \"rgba(151,187,205,1)\",\n                    pointStrokeColor: \"#fff\",\n                    pointHighlightFill: \"#fff\",\n                    pointHighlightStroke: \"rgba(151,187,205,1)\",\n                    data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\n                  }]\n                };\n                ctx = document.getElementById(\"stats_container\").getContext(\"2d\");\n                myLineChart = new Chart(ctx, {\n                  type: 'line',\n                  data: lineChartData\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"data-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"header-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Statistics\"), React.createElement(\"canvas\", {\n        id: \"stats_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StatisticsPage;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var authentication = state.authentication,\n      data = state.data;\n  var user = authentication.user,\n      userData = authentication.userData;\n  var restaurantData = data.restaurantData;\n  return {\n    user: user,\n    userData: userData,\n    restaurantData: restaurantData\n  };\n}\n\nvar Stats = connect(mapStateToProps)(StatisticsPage);\nexport default Stats;","map":{"version":3,"sources":["/mnt/c/Users/jbuxofplenty/Github/fudlocker/restaurant_web_app/src/views/Stats/Stats.js"],"names":["React","Component","connect","Chart","dataActions","StatisticsPage","props","loading","state","dropdownOpen","radioSelected","locationsData","purchased","completed","dispatch","populateStatistics","JSON","parse","localStorage","getItem","setState","processData","randomScalingFactor","Math","round","random","lineChartData","labels","datasets","label","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","data","ctx","document","getElementById","getContext","myLineChart","type","mapStateToProps","authentication","user","userData","restaurantData","Stats"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;;AADiB,UAyDnBC,OAzDmB,GAyDT;AAAA,aAAM;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AAAA,KAzDS;;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXC,MAAAA,aAAa,EAAE,CAFJ;AAGXC,MAAAA,aAAa,EAAE,IAHJ;AAIXC,MAAAA,SAAS,EAAE,IAJA;AAKXC,MAAAA,SAAS,EAAE;AALA,KAAb;AAHiB;AAUlB;;;;;;;;;;;;;AAGSC,gBAAAA,Q,GAAa,KAAKR,K,CAAlBQ,Q;;uBACFA,QAAQ,CAACV,WAAW,CAACW,kBAAZ,EAAD,C;;;AACVJ,gBAAAA,a,GAAgBK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,C;AAChBP,gBAAAA,S,GAAYI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,C;AACZN,gBAAAA,S,GAAYG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,C;AAChB,qBAAKC,QAAL,CAAc;AAAET,kBAAAA,aAAa,EAAbA,aAAF;AAAiBC,kBAAAA,SAAS,EAATA,SAAjB;AAA4BC,kBAAAA,SAAS,EAATA;AAA5B,iBAAd;AAEA,qBAAKQ,WAAL;;AACIC,gBAAAA,mB,GAAsB,SAAtBA,mBAAsB,GAAY;AAAE,yBAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAP;AAAwC,iB;;AAC5EC,gBAAAA,a,GAAgB;AAClBC,kBAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADU;AAElBC,kBAAAA,QAAQ,EAAE,CACR;AACEC,oBAAAA,KAAK,EAAE,kBADT;AAEEC,oBAAAA,SAAS,EAAE,uBAFb;AAGEC,oBAAAA,WAAW,EAAE,qBAHf;AAIEC,oBAAAA,UAAU,EAAE,qBAJd;AAKEC,oBAAAA,gBAAgB,EAAE,MALpB;AAMEC,oBAAAA,kBAAkB,EAAE,MANtB;AAOEC,oBAAAA,oBAAoB,EAAE,qBAPxB;AAQEC,oBAAAA,IAAI,EAAE,CAACd,mBAAmB,EAApB,EAAwBA,mBAAmB,EAA3C,EAA+CA,mBAAmB,EAAlE,EAAsEA,mBAAmB,EAAzF,EAA6FA,mBAAmB,EAAhH,EAAoHA,mBAAmB,EAAvI,EAA2IA,mBAAmB,EAA9J;AARR,mBADQ,EAWR;AACEO,oBAAAA,KAAK,EAAE,mBADT;AAEEC,oBAAAA,SAAS,EAAE,uBAFb;AAGEC,oBAAAA,WAAW,EAAE,qBAHf;AAIEC,oBAAAA,UAAU,EAAE,qBAJd;AAKEC,oBAAAA,gBAAgB,EAAE,MALpB;AAMEC,oBAAAA,kBAAkB,EAAE,MANtB;AAOEC,oBAAAA,oBAAoB,EAAE,qBAPxB;AAQEC,oBAAAA,IAAI,EAAE,CAACd,mBAAmB,EAApB,EAAwBA,mBAAmB,EAA3C,EAA+CA,mBAAmB,EAAlE,EAAsEA,mBAAmB,EAAzF,EAA6FA,mBAAmB,EAAhH,EAAoHA,mBAAmB,EAAvI,EAA2IA,mBAAmB,EAA9J;AARR,mBAXQ;AAFQ,iB;AA0BhBe,gBAAAA,G,GAAMC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,UAA3C,CAAsD,IAAtD,C;AAENC,gBAAAA,W,GAAc,IAAItC,KAAJ,CAAUkC,GAAV,EAAe;AAC/BK,kBAAAA,IAAI,EAAE,MADyB;AAE/BN,kBAAAA,IAAI,EAAEV;AAFyB,iBAAf,C;;;;;;;;;;;;;;;;;;6BASX;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,QAAA,EAAE,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnE0BzB,S;;AAsE7B,SAAS0C,eAAT,CAAyBnC,KAAzB,EAAgC;AAAA,MACtBoC,cADsB,GACGpC,KADH,CACtBoC,cADsB;AAAA,MACNR,IADM,GACG5B,KADH,CACN4B,IADM;AAAA,MAEtBS,IAFsB,GAEHD,cAFG,CAEtBC,IAFsB;AAAA,MAEhBC,QAFgB,GAEHF,cAFG,CAEhBE,QAFgB;AAAA,MAGtBC,cAHsB,GAGHX,IAHG,CAGtBW,cAHsB;AAI9B,SAAO;AACLF,IAAAA,IAAI,EAAJA,IADK;AAELC,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,cAAc,EAAdA;AAHK,GAAP;AAKD;;AAED,IAAMC,KAAK,GAAG9C,OAAO,CAACyC,eAAD,CAAP,CAAyBtC,cAAzB,CAAd;AACA,eAAe2C,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\nimport Chart from 'chart.js';\r\nimport { dataActions } from '../../actions';\r\n\r\nclass StatisticsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\n      locationsData: null,\n      purchased: null,\n      completed: null,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { dispatch } = this.props;\n    await dispatch(dataActions.populateStatistics());\r\n    var locationsData = JSON.parse(localStorage.getItem('locations'));\r\n    var purchased = JSON.parse(localStorage.getItem('purchased'));\r\n    var completed = JSON.parse(localStorage.getItem('completed'));\n    this.setState({ locationsData, purchased, completed });\n\n    this.processData();\n    var randomScalingFactor = function () { return Math.round(Math.random() * 100) };\r\n    var lineChartData = {\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fillColor: \"rgba(220,220,220,0.2)\",\r\n          strokeColor: \"rgba(220,220,220,1)\",\r\n          pointColor: \"rgba(220,220,220,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(220,220,220,1)\",\r\n          data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n        },\r\n        {\r\n          label: \"My Second dataset\",\r\n          fillColor: \"rgba(151,187,205,0.2)\",\r\n          strokeColor: \"rgba(151,187,205,1)\",\r\n          pointColor: \"rgba(151,187,205,1)\",\r\n          pointStrokeColor: \"#fff\",\r\n          pointHighlightFill: \"#fff\",\r\n          pointHighlightStroke: \"rgba(151,187,205,1)\",\r\n          data: [randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor(), randomScalingFactor()]\r\n        }\r\n      ]\r\n    }\n\n    var ctx = document.getElementById(\"stats_container\").getContext(\"2d\");\n    \r\n    var myLineChart = new Chart(ctx, {\r\n      type: 'line',\r\n      data: lineChartData\r\n    });\r\n  }\r\n\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"data-container\">\r\n        <h6 className=\"header-text\">Statistics</h6>\r\n        <canvas id=\"stats_container\"></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { authentication, data } = state;\r\n  const { user, userData } = authentication;\r\n  const { restaurantData } = data;\r\n  return {\r\n    user,\r\n    userData,\r\n    restaurantData\r\n  };\r\n}\r\n\r\nconst Stats = connect(mapStateToProps)(StatisticsPage);\r\nexport default Stats;\r\n"]},"metadata":{},"sourceType":"module"}